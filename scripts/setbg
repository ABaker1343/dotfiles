#!/bin/bash

printUsage() {
echo "setbg script for setting wallpaper and colorscheme

Example usage
    setbg -s 0.8 -t monokai -f path/to/wallpaper.png

Options:
    -f, --file         set the file to use as your wallpaper
    -t, --theme        set a pywal theme to use instead of a generated theme from the wallpaper
    -s, --saturation   set the saturation for the colorscheme
    -b, --backend      set the backend used by pywal to generate colorscheme
    -c, --color        set the background to a solid color
    --no-theme         do not generate a new colorscheme
    --help             print this help message

Dependancies:
    pywal (python-pywal)
    swagbg
    pywal-extender (see https://github.com/ABaker1343/dotfiles/scripts/pywal-extender)
"
}

saturation=0.6
file=""
bgColor=""
theme=""
backend="wal"
setTheme=true
bgsetter=hyprpaper
wallpaper_path=~/Wallpapers/active_wallpaper.png

for arg in $@; do
    case $arg in
        -f | --file)
            shift
            file=$1
            shift
            ;;
        -s | --saturation)
            shift
            saturation=$1
            shift
            ;;
        -c | --color)
            shift
            bgColor=$1
            shift
            ;;
        -t | --theme)
            shift
            theme=$1
            shift
            ;;
        -b | --backend)
            shift
            backend=$1
            shift
            ;;
        -h | --help)
            printUsage
            exit 0
            ;;
        --no-theme)
            shift
            setTheme=false
    esac
done

#if [ "$file" == "" ] && [ "$theme" ==  "" ]; then
    #echo "no file or theme selected"
    #exit 1
#fi

# set wallpaper
if [ "$file" != "" ]; then
    ffmpeg -nostdin -i $file $wallpaper_path -y
    echo "new wallpaper: $file"
    hyprctl hyprpaper unload "$wallpaper_path" > /dev/null
    hyprctl hyprpaper preload "$wallpaper_path" > /dev/null
    for monitor in $(hyprctl monitors | grep Monitor | awk '{ print $2 }'); do
	hyprctl hyprpaper wallpaper "$monitor,$wallpaper_path"
    done
else 
    if [ "$bgColor" != "" ]; then
	convert -size 1x1 xc:$bgColor $wallpaper_path
        #killall swaybg
        #nohup swaybg -c "$bgColor" > /dev/null &
    fi
fi

# set colorscheme
if [ "$setTheme" == "true" ]; then
    if [ "$theme" == "" ]; then
    	wal -n -i $file --saturate $saturation --backend $backend
    else
    	wal -n --theme "$theme" --saturate $saturation --backend $backend
    fi
    pywal-extender
fi

if [ -n "$(type -p spicetify)"]; then
    ~/.spicetify/spicetify apply
fi

# restart any desktop elements that are using the colorscheme
killall waybar
nohup waybar > /dev/null &
echo "finished setting wallpaper and colorscheme\n"

